# CAMARA Test Linting Rules Implementaion Guideline [ How to integrate the rules into CAMARA repository ]

## Introduction

This guide provides instructions how to implement Gherkin linting rules  to lint test feature file for the CAMARA APIs
The target method is linting rules integration with CAMARA API subproject repositories using GitHub Actions.


## Gherkin Linting  Configuration

The Gherkin Linting configuration consists of <b><a href="https://github.com/camaraproject/Commonalities/blob/main/artifacts/linting_rules/.gherkin-lintrc"> .gherkin-lintrc</a></b> file, which contains all the rules defined for CAMARA Test linting  specification as described in [Linting-rules.md](Linting-rules.md)

This file consolidates all rules:

1.  Spectral Core OpenAPI specification linting ruleset:

    `Ruleset extension: extends: "spectral:oas"`

## GitHub Actions Integration

1. Add **[.ghrkin-lintrc](https://github.com/camaraproject/Commonalities/blob/main/artifacts/linting_rules/.ghrkin-lintrc)** (rules) file to -> root location of repository


2. Add <b>[megalinter.yml](https://github.com/camaraproject/Commonalities/blob/main/artifacts/linting_rules/.github/workflows/megalinter.yml)</b> to GitHub action workflows  in  `.github/workflows` folder
   which includes the configuration of Megalinter and Gherkin linting for GitHub actions.

### Manually running linting workflow

**spectral_oas_lint.yml** includes configuration of the OAS linting workflow to be run manually as described in [GitHub Actions documentation](https://docs.github.com/en/actions/using-workflows/manually-running-a-workflow).

The rules will be applied to all files with *.yaml extension in '/code/API_definitions/' folder of the repository.
Write access to the repository is required to perform these steps.

The output from Spectral can be seen by expanding the step **Run Spectral Linting** of given worflow run Actions section of GitHub repository.


### Megalinter integration

[Megalinter](https://megalinter.io/latest/) is an Open-Source tool for CI/CD workflows that analyzes the consistency of code, configurations and scripts in repository sources. Megalinter supports Spectral linting.
The Megalinter job will be automatically activated once you submit a pull request on the [main/master] branch of the CAMARA repository, as configured in megalinter.yml.

The Megalinter configuration consists of the <b><a href="https://github.com/camaraproject/Commonalities/blob/main/artifacts/linting_rules/lint_function/workflows/megalinter.yml">megalinter.yml </a></b> file containing the necessary settings to run Megalinter and Spectral jobs on GitHub actions.

Additionally, Megalinter also supports linting of YAML files. To enable this, users need to add the following ruleset files to the root location.

-  <b>YAML Linting:</b> <a href="https://github.com/camaraproject/Commonalities/blob/main/artifacts/linting_rules/lint_function/workflows.yamllint.yaml"> .yamllint.yaml </a>




## Gherkin Linting configuration steps for local deployment

1.  Install Gherkin locally:

        npm install -g @stoplight/spectral

2.  Save files locally:

    Save ".gherkin-lintrc" file (contains Linting rules) at the root location.

4.  Apply Gherkin Lint rules on Test feature file  specification loacally:

        gherkin-lint test.feature  

    *Replace **'test.feature'** with the path to your test feature file.*
